
Intro:
- Maja , Nour, Group 28

outline:
- Show test list items. (github txt file)
- show associated code
- Purpose of this iteration: 
This is our first iteration, where we work with the project hotstone. Therefore we start by defining simple concepts of the code using TDD method.

TDD:
The first test we choose should be easy to implement, and teached us something. So 
in TDD princuple we refer to One Step Test.
1. We chose to start with the following test:
Given an initialized game, Then Findus is player in turn
We firstly quickly did a test! 
We use TDD principle Assert First!. We did this in all tests
We ran all tests and it failed
So used TDD principle, where we faked the new test (we only wrote Findus)
When we ran it it worked!
2. We then did another test:
* [OK] When Findus ends its turn, Then it is Peddersen in turn
The test failed.
So we used TDD principle Trangulation, where we wrote it using the following method:
It worked.

3. We moved on to the following test:
* Given an initialized game, then Dos is at index 1 in Findus' hand.
It failed
We created a card class, so we can  use 'getName'.
We inserted "Dos" in getName function, which is inside card class. (TJEK)
We ran all tests and it worked

4. We moved on to the following test:
When game starts Then Findus should have three cards in hand, Tres at index 0, Dos at index 1, and Uno at index 2
The test can be cut into little tests (following TDD principle child test)
All tests we have done so are follow the TDD principle isolated test

4.1 [OK] When game starts then Findus should have three cards in hand (FAKE IT)
We start with this test
it failed
following tdd principle FAKE IT, we wrote 3 in  ....
It worked
4.2  [OK] When game starts then Tres is at index 0 (MADE UP TEST)
We do  this test.
It failed
We made an array that includes tres and dos at the right positions.
It worked
4.3 [OK] When game starts then Dos is at index 1 (MADE UP TEST)
This test is already made in (3)
4.4 [OK] When game starts then Uno is at index 2(MADE UP TEST)
We made this test
It failed
We added tres at index 2
It worked

This way, test 4 is finished



5 [OK] Given an initialized game, Pedersen should have three cards in hand (FAKE IT)

We ran all tests and it worked because hand size should be 3
This is a redunant test. we remove it.

6. We made up the following test:
[OK] Given an initialized game, Pederson should have Uno at index 0 Dos at index 2 and Tres at index 1 (MADE UP TEST)

This test can be made into following small tests (TDD child tests):
6.1 [OK] When game starts then Uno is at index 0 in Pedersens hand (MADE UP TEST)
we start with this test
It failed, because it looks at an array list with  cards in different positions
we do an if statement that chooses either findus or pedersen
we write uno
it worked

6.2 [OK] When game starts then Tres is at index 1 in Pedersens hand (MADE UP TEST)
We run all tests, it fails
we do a new array list for pedersen
we insert array list in if statement instead of 'UNO' (TRANGULATION)
it works
6.3 [OK] When game starts then Dos  is at index 2 in Pedersens hand (MADE UP TEST)
it failed
We add dos into array list
it works

We move on the following test:
7. [OK] Given an initialized game, Then Findus' Hero has Mana 3 and Health 21. (FAKE IT)
we seperate to child tests:
7.1 Given an initialized game, Then Findus' Hero has Mana 3
quickly add a test
it fails
we make a new class for Hero
We make a constructor that has mana
we write 3 in mana  (FAKE IT
it works
7.2  Given an initialized game, Then Findus' Hero has health 21
quickly add a test
it fails
We add health in constructor
we write 21 in health
it works

We do a made up test:
8. * [OK] Given an initialized game, Then Pedersens Hero has Mana 2 and Health 21 (MADE UP TEST)







Conclusion:
